::onCreate
- Called when Activity is Created
- retain reference to UI views as Necessary
- Configure views as Necessary
:: onRestart
- Call when Activity is Stoped and Started again

::onStart
- Activity is about to become visible

:: onResume
- Init a interactivity with the user

:: onPause
- Is called, when your activity lose focus


:: onStop 
- is called when activity is no longer visible for user
- in this ponit is poss√≠ble, that the activity may be started later (Calling so, onResume)
- Typical Action is cache state, storing data for use later restart, an OnStart is called.
- Remember onStop may not be called if android kill your application
- So, don't wait to save persistent data in this method, go do that in onPause

:: onDestroy
- Called on destroy activity
- Typical action to do here, include releasing activity resources, for example, shutdown threads starteds by this activity



:: Configuration Changes
- Activity Restarting should be fast
- If necessary you can:

:: Retain object
retain an object containing importante state information during a configuration change
 - Override onRetainNonConfigurarionIntance, to build and return configuration
- Will be called between onStop and onDestroy methods
- this objects is retrieved when activity is recreated by calling getLastNonConfiguration instance,in onCreateActivity
- This method have been depreacated in favor of methods in fragment class.

:: manual configuration (not recommended for all cases)
- Can prevente from restarting activity
- declare the configuration changes your activity handles in AndroidManifest
E.g.
android:configChanges="orientation|screensize|keyboardHidden"

So, when configuration changes, Activity onConfigurationChanged method is called and receive a configuration object.

- 





